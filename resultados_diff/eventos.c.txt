--- theboys(7)/eventos.c	2024-12-12 17:44:56.000000000 -0300
+++ The_Boys//eventos.c	2024-12-16 23:08:11.908429000 -0300
@@ -64,6 +64,9 @@
 
 void espera(int tempo, struct heroi *h, struct base *b, struct mundo *mundo, struct fprio_t *fprio) {
     enqueue(b->espera, h->id);
+    if(b->fila_max < fila_tamanho(b->espera))
+        b->fila_max = fila_tamanho(b->espera);
+
     CriaInsere(tempo, TIPO_AVISA, b->id, -1, fprio);
     printf("%6d: ESPERA HEROI %2d BASE %d (%d) \n", 
            tempo, h->id, b->id, fila_tamanho(b->espera));
@@ -233,6 +236,14 @@
         CriaInsere(dia_seguinte, TIPO_MISSAO, m->id, -1, fprio); //adia p dia seguinte
         mundo->eventos_tratados++;
         m->tentativas++;                                        //atualiza tentativas
+        mundo->tentativas_total++;                              //atualiza tentativas total
+        if (m->tentativas < mundo->tentativas_min) {
+            mundo->tentativas_min = m->tentativas;
+        }
+
+        if (m->tentativas > mundo->tentativas_max) {
+            mundo->tentativas_max = m->tentativas; // Atualiza o máximo
+        }
         return;
     }
 
@@ -254,34 +265,38 @@
     mundo->bases[BMP].missoes_cumpridas++;               //atualiza missões cumpridas
     mundo->missoes_cumpridas++;                         //atualiza missões cumpridas
     m->tentativas++;                                    //atualiza tentativas (essa bem sucedida)
+    mundo->tentativas_total++;                          //atualiza tentativas total
 
     // Tratamento com min/max
-    if (m->tentativas < m->tentativas_min) {
-        m->tentativas_min = m->tentativas;
+    if (m->tentativas < mundo->tentativas_min) {
+        mundo->tentativas_min = m->tentativas;
     }
 
-    if (m->tentativas > m->tentativas_max) {
-        m->tentativas_max = m->tentativas; // Atualiza o máximo
+    if (m->tentativas > mundo->tentativas_max) {
+        mundo->tentativas_max = m->tentativas; // Atualiza o máximo
     }
 
     //para cada heroi presente na base mais próxima
-    for(int i = 0; i < mundo->bases[BMP].lotacao; i++){
-        if(mundo->herois->status == 0){
-            int heroi_id = cjto_pertence(mundo->bases[BMP].presentes, i);
-            struct heroi *h = &mundo->herois[heroi_id];
-
-            int risco = m->perigo / (h->paciencia + h->experiencia + 1);
-
-            if(risco > aleat(0, 30)){
-                CriaInsere(tempo, TIPO_MORRE, h->id, bases_aptas[BMP]->id, fprio);
-                mundo->eventos_tratados++;
-                mundo->mortalidade++;
-                printf("%6d: MORRE HEROI %2d MISSAO %d \n",
-                        tempo,
-                        h->id,
-                        m->id);
-            }else{
-                h->experiencia++;
+    for(int i = 0; i < N_HEROIS; i++){
+
+        if(cjto_pertence(mundo->bases[BMP].presentes, i) == 1){
+            if(mundo->herois[i].status == 0){
+                int heroi_id = mundo->herois[i].id;
+                struct heroi *h = &mundo->herois[heroi_id];
+
+                int risco = m->perigo / (h->paciencia + h->experiencia + 1);
+
+                if(risco > aleat(0, 30)){
+                    CriaInsere(tempo, TIPO_MORRE, h->id, BMP, fprio);
+                    mundo->eventos_tratados++;
+                    mundo->mortalidade++;
+                    printf("%6d: MORRE HEROI %2d MISSAO %d \n",
+                            tempo,
+                            h->id,
+                            m->id);
+                }else{
+                    h->experiencia++;
+                }
             }
         }
     }
@@ -334,7 +349,7 @@
         printf("BASE %2d LOT %2d FILA MAX %2d MISSOES %d\n",
             i,
             mundo->bases[i].lotacao,
-            fila_tamanho(mundo->bases[i].espera),
+            mundo->bases[i].fila_max,
             mundo->bases[i].missoes_cumpridas);
 
         //libera as coordenadas da base
@@ -354,10 +369,10 @@
            mundo->quant_missoes,
            percentual_missoes_cumpridas);
 
-    printf("TENTATIVAS/MISSAO: MIN %d, MAX %d, MEDIA %.1d \n",
-           mundo->missoes->tentativas_min,
-           mundo->missoes->tentativas_max,
-           mundo->missoes->tentativas / mundo->quant_missoes);
+    printf("TENTATIVAS/MISSAO: MIN %d, MAX %d, MEDIA %.1f \n",
+           mundo->tentativas_min,
+           mundo->tentativas_max,
+           (float)mundo->tentativas_total / mundo->quant_missoes);
 
     printf("TAXA MORTALIDADE: %.1f%%\n", (double)mundo->mortalidade * 100 / N_HEROIS);
 
